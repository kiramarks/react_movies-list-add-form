{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","checkTitle","checkImgUrl","checkImdbUrl","checkImdbId","isButtonDisabled","setTitle","e","setState","target","value","setDescription","setImgUrl","setImdbUrl","setImdbId","handleActiveButton","trim","length","handleSubmit","preventDefault","props","addMovie","validation","test","onBlur","event","style","borderColor","this","onSubmit","onChange","type","placeholder","required","disabled","Component","RegExp","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba77c06b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    checkTitle: false,\n    checkImgUrl: false,\n    checkImdbUrl: false,\n    checkImdbId: false,\n    isButtonDisabled: true,\n  };\n\n  setTitle = (e) => {\n    this.setState({\n      title: e.target.value,\n      checkTitle: false,\n    });\n  };\n\n  setDescription = (e) => {\n    this.setState({\n      description: e.target.value,\n    });\n  };\n\n  setImgUrl = (e) => {\n    this.setState({\n      imgUrl: e.target.value,\n    });\n  };\n\n  setImdbUrl = (e) => {\n    this.setState({\n      imdbUrl: e.target.value,\n\n    });\n  };\n\n  setImdbId = (e) => {\n    this.setState({\n      imdbId: e.target.value,\n    });\n  };\n\n  handleActiveButton = () => {\n    const {\n      title, description, imgUrl, imdbUrl, imdbId,\n    } = this.state;\n\n    if (title.trim().length > 0\n      && description.trim().length > 0\n      && imgUrl.trim().length > 0\n      && imdbUrl.trim().length > 0\n      && imdbId.trim().length > 0\n    ) {\n      this.setState({ isButtonDisabled: false });\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.setState((state) => {\n      const {\n        title, description, imgUrl, imdbUrl, imdbId,\n      } = state;\n      const { addMovie, validation } = this.props;\n\n      if (title.length === 0 || title.trim() === '') {\n        return { checkTitle: true };\n      }\n\n      if (!validation.test(imgUrl)) {\n        return { checkImgUrl: true };\n      }\n\n      if (!validation.test(imdbUrl)) {\n        return { checkImdbUrl: true };\n      }\n\n      if (imdbId.length === 0 || imdbId.trim() === '') {\n        return { checkImdbId: true };\n      }\n\n      addMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n\n      return {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        checkTitle: false,\n        checkImgUrl: false,\n        checkImdbUrl: false,\n        checkImdbId: false,\n      };\n    });\n  }\n\n  onBlur = (event) => {\n    event.target.style.borderColor = 'red';\n  };\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId, checkTitle,\n      checkImgUrl, checkImdbUrl, checkImdbId, isButtonDisabled } = this.state;\n\n    return (\n      <>\n        <form\n          className=\"form\"\n          onSubmit={this.handleSubmit}\n          onChange={this.handleActiveButton}\n        >\n          <h2 className=\"form__heading\">Add Movie Form</h2>\n          <label>\n            <input\n              type=\"text\"\n              className={checkTitle\n                ? 'form__item form__error'\n                : 'form__item'}\n              placeholder=\"Enter a title...\"\n              onChange={this.setTitle}\n              onBlur={this.onBlur}\n              value={title}\n              required\n            />\n          </label>\n          <label>\n            <textarea\n              className=\"form__item form__description\"\n              placeholder=\"Write description here...\"\n              onChange={this.setDescription}\n              onBlur={this.onBlur}\n              value={description}\n            />\n          </label>\n          <label>\n            <input\n              type=\"text\"\n              className={checkImgUrl\n                ? 'form__item form__error'\n                : 'form__item'}\n              placeholder=\"Enter a Image URL...\"\n              onChange={this.setImgUrl}\n              onBlur={this.onBlur}\n              value={imgUrl}\n            />\n          </label>\n          {checkImgUrl\n          && (\n            <span className=\"form__error-span\">\n              Please, enter a valid URL\n            </span>\n          )}\n          <label>\n            <input\n              type=\"text\"\n              className={checkImdbUrl\n                ? 'form__item form__error'\n                : 'form__item'}\n              placeholder=\"Enter a Imdb URL...\"\n              onChange={this.setImdbUrl}\n              onBlur={this.onBlur}\n              value={imdbUrl}\n            />\n          </label>\n          {checkImdbUrl\n          && (\n            <span className=\"form__error-span\">\n              Please, enter a valid URL\n            </span>\n          )}\n          <label>\n            <input\n              type=\"text\"\n              className={checkImdbId\n                ? 'form__item form__error'\n                : 'form__item'}\n              placeholder=\"Enter a Imdb ID...\"\n              onChange={this.setImdbId}\n              onBlur={this.onBlur}\n              value={imdbId}\n            />\n          </label>\n          <button\n            type=\"submit\"\n            className=\"form__button\"\n            disabled={isButtonDisabled}\n          >\n            Add\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  validation: PropTypes.instanceOf(RegExp).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\n// eslint-disable-next-line\nconst validation = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            movies={movies}\n            addMovie={this.addMovie}\n            validation={validation}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}