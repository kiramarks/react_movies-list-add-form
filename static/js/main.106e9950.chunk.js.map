{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","checkTitle","checkImgUrl","checkImdbUrl","checkImdbId","isButtonDisabled","handleInputChange","e","target","name","value","setState","handleActiveButton","validation","props","trim","length","test","handleSubmit","preventDefault","addMovie","onBlur","id","this","onSubmit","onChange","type","classNames","form__item","form__error","placeholder","required","disabled","Component","RegExp","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.106e9950.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    checkTitle: false,\n    checkImgUrl: false,\n    checkImdbUrl: false,\n    checkImdbId: false,\n    isButtonDisabled: true,\n  };\n\n  handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleActiveButton = () => {\n    const {\n      title, description, imgUrl, imdbUrl, imdbId,\n    } = this.state;\n    const { validation } = this.props;\n\n    if (title.trim().length > 0\n      && description.trim().length > 0\n      && validation.test(imgUrl)\n      && validation.test(imdbUrl)\n      && imdbId.trim().length > 0\n    ) {\n      this.setState({ isButtonDisabled: false });\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.setState((state) => {\n      const {\n        title, description, imgUrl, imdbUrl, imdbId,\n      } = state;\n      const { addMovie } = this.props;\n\n      addMovie({\n        title, description, imgUrl, imdbUrl, imdbId,\n      });\n\n      return {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        checkTitle: false,\n        checkImgUrl: false,\n        checkImdbUrl: false,\n        checkImdbId: false,\n      };\n    });\n  }\n\n  onBlur = ({ target }) => {\n    const {\n      title, imgUrl, imdbUrl, imdbId,\n    } = this.state;\n\n    const { validation } = this.props;\n\n    if (target.id === 'title') {\n      if (title.length === 0 || title.trim() === '') {\n        this.setState({ checkTitle: true });\n      } else {\n        this.setState({ checkTitle: false });\n      }\n    }\n\n    if (target.id === 'imgUrl') {\n      if (!validation.test(imgUrl)) {\n        this.setState({ checkImgUrl: true });\n      } else {\n        this.setState({ checkImgUrl: false });\n      }\n    }\n\n    if (target.id === 'imdbUrl') {\n      if (!validation.test(imdbUrl)) {\n        this.setState({ checkImdbUrl: true });\n      } else {\n        this.setState({ checkImdbUrl: false });\n      }\n    }\n\n    if (target.id === 'imdbId') {\n      if (imdbId.length === 0 || imdbId.trim() === '') {\n        this.setState({ checkImdbId: true });\n      } else {\n        this.setState({ checkImdbId: false });\n      }\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      checkTitle,\n      checkImgUrl,\n      checkImdbUrl,\n      checkImdbId,\n      isButtonDisabled,\n    } = this.state;\n\n    return (\n      <>\n        <form\n          className=\"form\"\n          onSubmit={this.handleSubmit}\n          onChange={this.handleActiveButton}\n        >\n          <h2 className=\"form__heading\">Add Movie Form</h2>\n          <label>\n            <input\n              id=\"title\"\n              type=\"text\"\n              className={classNames({\n                form__item: true,\n                form__error: checkTitle,\n              })}\n              placeholder=\"Enter a title...\"\n              onChange={this.handleInputChange}\n              onBlur={this.onBlur}\n              name=\"title\"\n              value={title}\n              required\n            />\n          </label>\n          {checkTitle\n          && (\n            <span className=\"form__error-span\">\n              Please, enter a title\n            </span>\n          )}\n          <label>\n            <textarea\n              id=\"description\"\n              className=\"form__item form__description\"\n              placeholder=\"Write description here...\"\n              onChange={this.handleInputChange}\n              onBlur={this.onBlur}\n              name=\"description\"\n              value={description}\n            />\n          </label>\n          <label>\n            <input\n              id=\"imgUrl\"\n              type=\"text\"\n              className={classNames({\n                form__item: true,\n                form__error: checkImgUrl,\n              })}\n              placeholder=\"Enter a Image URL...\"\n              onChange={this.handleInputChange}\n              onBlur={this.onBlur}\n              name=\"imgUrl\"\n              value={imgUrl}\n            />\n          </label>\n          {checkImgUrl\n          && (\n            <span className=\"form__error-span\">\n              Please, enter a valid URL\n            </span>\n          )}\n          <label>\n            <input\n              id=\"imdbUrl\"\n              type=\"text\"\n              className={classNames({\n                form__item: true,\n                form__error: checkImdbUrl,\n              })}\n              placeholder=\"Enter a Imdb URL...\"\n              onChange={this.handleInputChange}\n              onBlur={this.onBlur}\n              name=\"imdbUrl\"\n              value={imdbUrl}\n            />\n          </label>\n          {checkImdbUrl\n          && (\n            <span className=\"form__error-span\">\n              Please, enter a valid URL\n            </span>\n          )}\n          <label>\n            <input\n              id=\"imdbId\"\n              type=\"text\"\n              className={classNames({\n                form__item: true,\n                form__error: checkImdbId,\n              })}\n              placeholder=\"Enter a Imdb ID...\"\n              onChange={this.handleInputChange}\n              onBlur={this.onBlur}\n              name=\"imdbId\"\n              value={imdbId}\n            />\n          </label>\n          <button\n            type=\"submit\"\n            className=\"form__button\"\n            disabled={isButtonDisabled}\n          >\n            Add\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  validation: PropTypes.instanceOf(RegExp).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\n// eslint-disable-next-line\nconst validation = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            movies={movies}\n            addMovie={this.addMovie}\n            validation={validation}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}